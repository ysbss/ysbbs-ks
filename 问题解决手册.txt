1.无法做到更新所有表的id
原因：update语句依靠id做where判断。
解决方案：每个表加入新id作为主键标识，进行update语句的where判断

2.在判断书籍归还时候是否大于60天时，需要进行-1
原因：在借书操作时，对于date类型是在月份前加2，而不是在天数前加60
解决方案：在判断是否大于60时，对于两个日期相减得到的天数再-1即得60，或者在添加时，改为在天数添加，由于已经建过了表，且添加了数据就在判断进行减一


3.没有很好做到的高内聚低耦合
原因：一开始设计时，出了问题，按照要求，controller层应该只有两个对象即student以及administer即可，其他的操作应该分别放在这两个里面
解决方案：重新写过controller层代码，将冗余操作放在相应controller中

4.一些搜索是按照各自表的id进行搜索，实际情况来说应该是按照分别的名字进行模糊查询
原因：编程时直接将sql语句写成按id查询
解决方案：如果想更改的话直接将sql语句改成按名字进行模糊查询即可，或者增加几个dao层接口来实现。

5.管理员如果操作不当会引发某些特殊bug（例如在催还界面，如果将某个人的催还信息的书改成同样的两本将会报错）
原因：管理员角色的操作不当
解决方案：具体来说都可以在controller解决。